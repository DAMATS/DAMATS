# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  # TODO: Set link to an EOX box when avaiable.
  #config.vm.box_url = "http://downloads.eox.at/boxes/centos-6.7-x86_64.box"

  config.vm.hostname = "damats-devel"

  # set auto_update to false, if you do NOT want to check the correct 
  # additions version when booting this machine
  config.vbguest.auto_update = false
  # config.vbguest.iso_path = "http://download.virtualbox.org/virtualbox/4.3.14/VBoxGuestAdditions_4.3.14.iso"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 80, host: 8110
  config.vm.network :forwarded_port, guest: 8000, host: 8111

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  config.vm.synced_folder "../../eoxserver", "/usr/local/eoxserver", owner: "root", group: "root"
  config.vm.synced_folder "../../DAMATS-Server", "/usr/local/damats", owner: "vagrant", group: "vagrant"
  config.vm.synced_folder "../", "/home/vagrant/DAMATS", owner: "vagrant", group: "vagrant"
  config.vm.synced_folder "~/", "/home/vagrant/host", owner: "vagrant", group: "vagrant"
  # data directory (Change to your custom data directory if necessary.)
  config.vm.synced_folder "../../data", "/var/data", owner: "root", group: "root"

  # Shell provisioning
  config.vm.provision :shell, :inline => "cd /home/vagrant/DAMATS/scripts/ ; /bin/sh ./install.sh -d"

  # Adjust Virtualbox configuration
  config.vm.provider "virtualbox" do |v|

    # Custom name
    v.name = "damats-devel"

    # Increase memory and cpus
    v.customize ["modifyvm", :id, "--memory", 1024, "--cpus", 2]
    # Increase performance i.e. don't use swap extensively 
    v.customize ["modifyvm", :id, "--ioapic", "on", "--largepages", "off", "--vtxvpid", "off"]

    # Use GUI for debugging purposes
    #v.gui = true
  end
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
